<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.togest.dao.PlanBaseDao">
	<resultMap id="BaseResultMap" type="com.togest.domain.PlanBaseDTO">
		<id column="id" property="id" />
		<result column="plan_date" property="planDate" />
		<result column="complete_date" property="completeDate" />
		<result column="train_number" property="trainNumber" />
		<result column="train_id" property="trainId" />
		<result column="contacts" property="contacts" />
		<result column="plan_status" property="planStatus" />
		<result column="audit_status" property="auditStatus" />
		<result column="remark" property="remark" />
		<result column="system_id" property="systemId" />
		<result column="sort" property="sort" />
	</resultMap>

	<sql id="Base_Column_List">
		id, plan_date, complete_date, train_number, train_id,
		contacts,
		plan_status, audit_status,
		remark, system_id, sort
	</sql>



	<!-- <select id="getByKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from 6c_plan_base
		where id = #{id,jdbcType=VARCHAR}
	</select> -->
	<select id="getByEntity" resultMap="BaseResultMap"
		parameterType="com.togest.domain.PlanBaseDTO">
		select
		<include refid="Base_Column_List" />
		from 6c_plan_base
		<where>
			<if test="planDate!=null">
				plan_date =#{planDate}
			</if>
			<if test="trainId!=null">
				and train_id =#{trainId}
			</if>
			<if test="trainNumber!=null">
				and train_number =#{trainNumber}
			</if>
			<if test="systemId!=null">
				and system_id =#{systemId}
			</if>
			and del_flag = 0
			and plan_status != 5
		</where>
	</select>
	<select id="getListByKeys" resultMap="BaseResultMap"
		parameterType="java.util.List">
		select
		<include refid="Base_Column_List" />
		from 6c_plan_base
		where id in
		<foreach item="item" collection="ids" separator="," open="("
			close=")" index="">
			#{item}
		</foreach>
		and del_flag = 0
	</select>

	<insert id="insert" parameterType="com.togest.domain.PlanBaseDTO">
		insert into 6c_plan_base (id,
		plan_date, complete_date,
		train_number, train_id, contacts,
		plan_status, audit_status, remark,
		system_id, del_flag, create_ip,
		create_by, create_date<if test="sort!=null and sort!=0">,sort</if>
		)
		values (#{id,jdbcType=VARCHAR},
		#{planDate,jdbcType=DATE},
		#{completeDate,jdbcType=DATE},
		#{trainNumber,jdbcType=VARCHAR}, #{trainId,jdbcType=VARCHAR},
		#{contacts,jdbcType=VARCHAR},
		#{planStatus,jdbcType=VARCHAR},
		#{auditStatus,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR},
		#{systemId,jdbcType=VARCHAR}, #{delFlag,jdbcType=SMALLINT},
		#{createIp,jdbcType=VARCHAR},
		#{createBy,jdbcType=VARCHAR},
		#{createDate,jdbcType=TIMESTAMP}
		<if test="sort!=null and sort!=0">,#{sort,jdbcType=INTEGER}</if>
		)
	</insert>
	<insert id="insertList" parameterType="java.util.List">
		insert into 6c_plan_base (id,
		plan_date, complete_date,
		train_number, train_id, contacts,
		plan_status, audit_status, remark,
		system_id, del_flag, create_ip,
		create_by, create_date<if test="sort!=null and sort!=0">,sort</if>
		)
		values 
		<foreach collection="list" item="item" separator="," index="">
		(#{item.id,jdbcType=VARCHAR},
		#{item.planDate,jdbcType=DATE},
		#{item.completeDate,jdbcType=DATE},
		#{item.trainNumber,jdbcType=VARCHAR}, #{trainId,jdbcType=VARCHAR},
		#{item.contacts,jdbcType=VARCHAR},
		#{item.planStatus,jdbcType=VARCHAR},
		#{item.auditStatus,jdbcType=VARCHAR},
		#{item.remark,jdbcType=VARCHAR},
		#{item.systemId,jdbcType=VARCHAR}, #{delFlag,jdbcType=SMALLINT},
		#{item.createIp,jdbcType=VARCHAR},
		#{item.createBy,jdbcType=VARCHAR},
		#{item.createDate,jdbcType=TIMESTAMP}
		<if test="sort!=null and sort!=0">,#{item.sort,jdbcType=INTEGER}</if>
		)
		</foreach>
	</insert>

	<update id="update" parameterType="com.togest.domain.PlanBaseDTO">
		update 6c_plan_base
		set
		plan_date = #{planDate,jdbcType=DATE},
		complete_date =
		#{completeDate,jdbcType=DATE},
		train_number =
		#{trainNumber,jdbcType=VARCHAR},
		train_id =
		#{trainId,jdbcType=VARCHAR},
		contacts = #{contacts,jdbcType=VARCHAR},
		plan_status = #{planStatus,jdbcType=VARCHAR},
		audit_status =
		#{auditStatus,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		system_id = #{systemId,jdbcType=VARCHAR},
		update_ip =
		#{updateIp,jdbcType=VARCHAR},
		update_by = #{updateBy,jdbcType=VARCHAR},
		update_date = #{updateDate,jdbcType=TIMESTAMP}
		<if test="sort != null">
		,sort =
		#{sort,jdbcType=INTEGER}
		</if>
		
		where id=#{id}
	</update>
	<select id="findList" parameterType="com.togest.domain.PlanBaseDTO"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from 6c_plan_base
		order by plan_date desc

	</select>

	<update id="deleteFalses" parameterType="java.util.Map">
		update 6c_plan_base
		set
		del_flag = 1,
		delete_ip = #{deleteIp},
		delete_by =
		#{deleteBy},
		delete_date = #{deleteDate}
		where id in
		<foreach item="item" collection="ids" separator="," open="("
			close=")" index="">
			#{item}
		</foreach>
	</update>

	<update id="updatePlanStatus" parameterType="java.util.Map">
		update 6c_plan_base set
		plan_status = #{planStatus}
		where id
		in
		<foreach item="item" collection="ids" separator="," open="("
			close=")" index="">
			#{item}
		</foreach>
	</update>

	<update id="updateAuditStatus" parameterType="java.util.Map">
		update 6c_plan_base set
		audit_status = #{auditStatus}
		where id
		in
		<foreach item="item" collection="ids" separator="," open="("
			close=")" index="">
			#{item}
		</foreach>
	</update>

	<resultMap id="C1_BaseDetailResultMap" type="com.togest.domain.PlanBaseDTO">
		<id column="id" property="id" />
		<result column="plan_date" property="planDate" />
		<result column="complete_date" property="completeDate" />
		<result column="train_number" property="trainNumber" />
		<result column="train_id" property="trainId" />
		<result column="contacts" property="contacts" />
		<result column="plan_status" property="planStatus" />
		<result column="audit_status" property="auditStatus" />
		<result column="remark" property="remark" />
		<result column="system_id" property="systemId" />
		<result column="systemName" property="systemName" />
		<result column="sort" property="sort" />
		<result column="trainName" property="trainName" />

		<collection property="planDetails" javaType="java.util.List"
			ofType="com.togest.domain.PlanDetailDTO">
			<id column="pd_id" property="id" />
			<result column="line_id" property="lineId" />
			<result column="direction" property="direction" />
			<result column="patcher" property="patcher" />
			<result column="plan_base_id" property="planBaseId" />
			<result column="check_region" property="checkRegion" />

			<result column="lineName" property="lineName" />
			<result column="directionName" property="directionName" />

			<collection property="depts" javaType="java.util.List"
				ofType="com.togest.domain.Naming">
				<id column="d_id" property="id" />
				<result column="d_name" property="name" />
			</collection>
		</collection>
	</resultMap>
	<sql id="C1_Base_Column_List">
		a.id, a.plan_date, a.complete_date, a.train_number,
		a.train_id,
		a.contacts,a.plan_status, a.audit_status,a.remark,
		a.system_id,sys.name as systemName,
		a.sort,
		ct.train_num as trainName,
		pd.id as pd_id,
		pd.line_id, pd.direction, pd.patcher,
		pd.plan_base_id,pd.check_region,
		pl.name as lineName,
		di.name as directionName,
		d.id as d_id,d.name as
		d_name
	</sql>

	<sql id="C1_Base_Table">
		6c_plan_base a
		left join 6c_check_train ct on ct.id =
		a.train_id
		left join 6c_plan_detail pd on pd.plan_base_id = a.id and pd.del_flag=0 
		left
		join p_dictionary_item di on di.id = pd.direction 
		left join p_line pl
		on pd.line_id = pl.id
		left join 6c_plan_execute pe on pe.plan_detail_id
		= pd.id and pe.del_flag=0 
		left join p_department d on pe.responsible_dept_id = d.id
		left join 6c_system sys on a.system_id = sys.id
		
	</sql>

	<select id="findC1Lists" parameterType="com.togest.request.PlanQueryFilter"
		resultMap="C1_BaseDetailResultMap">
		select
		<include refid="C1_Base_Column_List"></include>
		from
		(select distinct a.* 
		from <include refid="C1_Base_Table"></include>
		<where>
		a.del_flag = 0 
			<if test="beginCheckDate != null">
				and a.plan_date &gt;= #{beginCheckDate}
			</if>
			<if test="endCheckDate != null">
				and a.plan_date &lt;= #{endCheckDate}
			</if>
			<if test="lineId != null">
				and pd.line_id = #{lineId}
			</if>
			<if test="direction != null">
				and pd.direction = #{direction}
			</if>
			<if test="did != null">
				<if test="isChild == true">
					and((pe.dept_id in (select id from
					p_department where
					parent_ids like '%${did}%' and del_flag=0)
					or pe.dept_id = #{did}) 
					or 
					(pe.responsible_dept_id in (select id from
					p_department where
					parent_ids like '%${did}%' and del_flag=0)
					or pe.responsible_dept_id = #{did}) )
				</if>
				<if test="isChild == false">
					and (pe.dept_id = #{did} or pe.responsible_dept_id=#{did} )
				</if>
			</if>
			
			<if test="did != null">
				<if test="isChild == true">
					and(pe.responsible_dept_id in (select id from
					p_department where
					parent_ids like '%${did}%' and del_flag=0)
					or pe.responsible_dept_id = #{did})
				</if>
				<if test="isChild == false">
					and pe.responsible_dept_id = #{did}
				</if>
			</if>
				<if test="planStatusList != null">
				and a.plan_status in
				<foreach item="item" collection="planStatusList" separator="," open="("
					close=")" index="">
					#{item}
				</foreach>
			</if>
			<if test="planStatus=='1'.toString()">
				and (a.id not in (select plan_base_id from 6c_plan_execute where execute_status !='1' and del_flag=0))
			</if>
			<if test="systemId != null">
				and a.system_id = #{systemId}
			</if>
			
		</where>
		order by a.plan_date desc,pd.line_id,pd.direction
		<if test="page!=null and page.startNum!=null and page.endNum !=null">
			limit #{page.startNum},#{page.endNum}
		</if>
		) a
		left join 6c_check_train ct on ct.id =
		a.train_id
		left join 6c_plan_detail pd on pd.plan_base_id = a.id and pd.del_flag=0 
		left
		join p_dictionary_item di on di.id = pd.direction 
		left join p_line pl
		on pd.line_id = pl.id
		left join 6c_plan_execute pe on pe.plan_detail_id
		= pd.id and pe.del_flag=0 
		left join p_department d on pe.responsible_dept_id = d.id
		left join 6c_system sys on a.system_id = sys.id
		<where>
		a.del_flag = 0 
			<if test="beginCheckDate != null">
				and a.plan_date &gt;= #{beginCheckDate}
			</if>
			<if test="endCheckDate != null">
				and a.plan_date &lt;= #{endCheckDate}
			</if>
			<if test="lineId != null">
				and pd.line_id = #{lineId}
			</if>
			<if test="direction != null">
				and pd.direction = #{direction}
			</if>
			<if test="did != null">
				<if test="isChild == true">
					and((pe.dept_id in (select id from
					p_department where
					parent_ids like '%${did}%' and del_flag=0)
					or pe.dept_id = #{did}) 
					or 
					(pe.responsible_dept_id in (select id from
					p_department where
					parent_ids like '%${did}%' and del_flag=0)
					or pe.responsible_dept_id = #{did}) )
				</if>
				<if test="isChild == false">
					and (pe.dept_id = #{did} or pe.responsible_dept_id=#{did} )
				</if>
			</if>
			
			<if test="did != null">
				<if test="isChild == true">
					and(pe.responsible_dept_id in (select id from
					p_department where
					parent_ids like '%${did}%' and del_flag=0)
					or pe.responsible_dept_id = #{did})
				</if>
				<if test="isChild == false">
					and pe.responsible_dept_id = #{did}
				</if>
			</if>
			<if test="planStatusList != null ">
				and a.plan_status in
				<foreach item="item" collection="planStatusList" separator="," open="("
					close=")" index="">
					#{item}
				</foreach>
			</if>
			
			<if test="planStatus=='1'.toString()">
				and (a.id not in (select plan_base_id from 6c_plan_execute where execute_status !='1' and del_flag=0))
			</if>
		
			<if test="systemId != null">
				and a.system_id = #{systemId}
			</if>
		</where>
		order by a.plan_date desc,pd.line_id,pd.direction
	</select>
	<select id="findC1ListsCounts" parameterType="com.togest.request.PlanQueryFilter" resultType="java.lang.Integer">
	select count( distinct a.id )
		from <include refid="C1_Base_Table"></include>
		<where>
		a.del_flag = 0 
			<if test="beginCheckDate != null">
				and a.plan_date &gt;= #{beginCheckDate}
			</if>
			<if test="endCheckDate != null">
				and a.plan_date &lt;= #{endCheckDate}
			</if>
			<if test="lineId != null">
				and pd.line_id = #{lineId}
			</if>
			<if test="direction != null">
				and pd.direction = #{direction}
			</if>
			<if test="did != null">
				<if test="isChild == true">
					and((pe.dept_id in (select id from
					p_department where
					parent_ids like '%${did}%' and del_flag=0)
					or pe.dept_id = #{did}) 
					or 
					(pe.responsible_dept_id in (select id from
					p_department where
					parent_ids like '%${did}%' and del_flag=0)
					or pe.responsible_dept_id = #{did}) )
				</if>
				<if test="isChild == false">
					and (pe.dept_id = #{did} or pe.responsible_dept_id=#{did} )
				</if>
			</if>
			
			<if test="did != null">
				<if test="isChild == true">
					and(pe.responsible_dept_id in (select id from
					p_department where
					parent_ids like '%${did}%' and del_flag=0)
					or pe.responsible_dept_id = #{did})
				</if>
				<if test="isChild == false">
					and pe.responsible_dept_id = #{did}
				</if>
			</if>
			<if test="planStatusList != null">
				and a.plan_status in
				<foreach item="item" collection="planStatusList" separator="," open="("
					close=")" index="">
					#{item}
				</foreach>
			</if>
			
			<if test="planStatus == '1'.toString()">
				and (a.id not in (select plan_base_id from 6c_plan_execute where execute_status !='1' and del_flag=0))
			</if>
		
			<if test="systemId != null">
				and a.system_id = #{systemId}
			</if>
		</where>
		order by a.plan_date desc,pd.line_id,pd.direction
	
	</select>

	<resultMap id="Response_BaseDetailResultMap" type="com.togest.domain.PlanBaseDTO">
		<id column="id" property="id" />
		<result column="plan_date" property="planDate" />
		<result column="complete_date" property="completeDate" />
		<result column="train_number" property="trainNumber" />
		<result column="train_id" property="trainId" />
		<result column="contacts" property="contacts" />
		<result column="plan_status" property="planStatus" />
		<result column="audit_status" property="auditStatus" />
		<result column="remark" property="remark" />
		<result column="system_id" property="systemId" />
		<result column="systemName" property="systemName" />
		<result column="sort" property="sort" />
		<result column="trainName" property="trainName" />
		<association property="planExecute" javaType="com.togest.domain.PlanExecuteDTO">
			<id column="pe_id" property="id" />
			<result column="pe_plan_base_id" property="planBaseId" />
			<result column="plan_detail_id" property="planDetailId" />
			<result column="start_station" property="startStation" />
			<result column="end_station" property="endStation" />
			<result column="responsible_dept_id" property="responsibleDeptId" />
			<result column="dept_id" property="deptId" />
			<result column="audit_person" property="auditPerson" />
			<result column="audit_date" property="auditDate" />
			<result column="patcher" property="patcher" />
			<result column="add_date" property="addDate" />
			<result column="confirm_person" property="confirmPerson" />
			<result column="confirm_date" property="confirmDate" />
		
			<result column="actual_add_date" property="actualAddDate" />
			<result column="actual_patcher" property="actualPatcher" />
			<result column="actual_check_region" property="actualCheckRegion" />
			<result column="actual_add_train_number" property="actualAddTrainNumber" />
			<result column="actual_add_traffic_number" property="actualAddTrafficNumber" />
			<result column="equ_no" property="equNo" />
			<result column="equ_operation" property="equOperation" />
			
			<result column="implementation" property="implementation" />
			<result column="section_id" property="sectionId" />
			<!-- <result column="system_id" property="systemId" /> -->
			<result column="execute_status" property="executeStatus" />
			<result column="pe_remark" property="remark" />
			<result column="deptName" property="deptName" />
		</association>
		<collection property="planDetails" javaType="java.util.List"
			ofType="com.togest.domain.PlanDetailDTO">
			<id column="pd_id" property="id" />
			<result column="line_id" property="lineId" />
			<result column="direction" property="direction" />
			<result column="patcher" property="patcher" />
			<result column="plan_base_id" property="planBaseId" />
			<result column="check_region" property="checkRegion" />
			<result column="lineName" property="lineName" />
			<result column="directionName" property="directionName" />
		</collection>
	</resultMap>
	<sql id="Response_Base_Column_List">
		a.id, a.plan_date, a.complete_date, a.train_number,
		a.train_id,
		a.contacts,a.plan_status, a.audit_status,a.remark,
		a.system_id,sys.name as systemName,
		a.sort,
		ct.train_num as trainName,
		pd.id as pd_id,
		pd.line_id, pd.direction, <!-- pd.patcher, -->
		pd.plan_base_id,pd.check_region,
		pl.name as lineName,
		di.name as directionName,
		pe.id as pe_id,
		pe.plan_base_id as pe_plan_base_id, pe.plan_detail_id,
		pe.start_station,
		pe.end_station,
		pe.responsible_dept_id,
		pe.dept_id,
		pe.audit_person, pe.audit_date,
		pe.patcher, pe.add_date,
		pe.confirm_person, pe.confirm_date,
		pe.actual_add_date,pe.actual_patcher,pe.actual_check_region,pe.actual_add_train_number,pe.actual_add_traffic_number,pe.equ_no,pe.equ_operation,
		pe.implementation, pe.section_id,
		pe.execute_status, pe.remark as pe_remark,
		d.name as
		deptName
	</sql>

	<sql id="Response_Base_Table">
		6c_plan_base a
		left join 6c_check_train ct on ct.id =
		a.train_id
		left join 6c_plan_detail pd on pd.plan_base_id = a.id and pd.del_flag=0
		left
		join p_dictionary_item di on di.id = pd.direction
		left join p_line pl
		on pd.line_id = pl.id
		left join 6c_plan_execute pe on pe.plan_detail_id
		= pd.id and pe.del_flag=0
		left join p_department d on pe.dept_id = d.id
		left join 6c_system sys on a.system_id = sys.id
	</sql>
	
	<select id="getByKey" resultMap="Response_BaseDetailResultMap" parameterType="java.lang.String">
		select
		<include refid="Response_Base_Column_List" />
		from 
		<include refid="Response_Base_Table"></include>
		where a.id = #{id} 
	</select>
	
	<select id="findLists" parameterType="com.togest.request.PlanQueryFilter"
		resultMap="Response_BaseDetailResultMap">
		select
		<include refid="Response_Base_Column_List"></include>
		from
		<include refid="Response_Base_Table"></include>
		<where>
		a.del_flag=0
			<if test="beginCheckDate != null">
				and a.plan_date &gt;= #{beginCheckDate}
			</if>
			<if test="endCheckDate != null">
				and a.plan_date &lt;= #{endCheckDate}
			</if>
			<if test="lineId != null">
				and pd.line_id = #{lineId}
			</if>
			<if test="direction != null">
				and pd.direction = #{direction}
			</if>
			<if test="did != null">
				<if test="isChild == true">
					and(pe.dept_id in (select id from
					p_department where
					parent_ids like '%${did}%' and del_flag=0)
					or pe.dept_id = #{did})
				</if>
				<if test="isChild == false">
					and pe.dept_id = #{did}
				</if>
			</if>
			<if test="planStatus != null">
				and a.plan_status = #{planStatus}
			</if>
			<if test="systemId != null">
				and a.system_id = #{systemId}
			</if>
		</where>
		order by a.plan_date desc,pd.line_id,pd.direction
	</select>

	<select id="findPlanTaskFlow" parameterType="java.util.List"
		resultType="com.togest.response.PlanTaskFlowResponse">
		select a.id,
		pe.dept_id as deptId,pe.patcher as patcher,
		d.process_instance_id as
		processInstanceId, d.form_key as formKey,
		d.task_name as taskName, d.task_id as taskId
		from 6c_plan_base a
		left join 6c_plan_execute pe on pe.plan_base_id=a.id
		left join
		6c_defect_flow d on a.id=d.id
		where a.id
		in
		<foreach item="item" collection="ids" separator="," open="("
			close=")" index="">
			#{item}
		</foreach>
	</select>

</mapper>