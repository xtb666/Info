<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.togest.dao.PlanLineDao">
	<resultMap id="BaseResultMap" type="com.togest.domain.PlanLine">
		<id column="id" property="id" />
		<result column="line_id" property="lineId" />
		<result column="direction" property="direction" />
		<result column="start_km" property="startKm" />
		<result column="end_km" property="endKm" />
		<result column="start_station" property="startStation" />
		<result column="end_station" property="endStation" />
		<result column="detect_mileage" property="detectMileage" />
		<result column="plan_id" property="planId" />
	</resultMap>

	<sql id="Base_Column_List">
		a.id, a.line_id, a.direction, a.start_km, a.end_km, a.start_station, a.end_station,
		a.detect_mileage, a.plan_id
	</sql>
	
	<sql id="Base_Table">
		6c_plan_line a
	</sql>

	<select id="getPlanId" parameterType="java.lang.String" resultType="java.lang.String">
		select plan_id
		from 6c_plan_line
		where
		a.id = #{id} and del_flag = 0
	</select>

	<select id="getByKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="Base_Table" />
		where
		a.id = #{id}
	</select>
	
	<select id="checkRepeat" resultMap="BaseResultMap" parameterType="com.togest.domain.PlanLine">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="Base_Table" />
		<where>
			a.del_flag=0
			<if test="lineId != null">
				and a.line_id = #{lineId}
			</if>
			<if test="direction != null">
				and a.direction = #{direction}
			</if>
			<if test="planId != null">
				and a.plan_id = #{planId}
			</if>
		</where>
	</select>
	
	<select id="getIds"  parameterType="java.lang.String" resultType="java.lang.String">
		select id
		from 6c_plan_line
		where
		plan_id = #{planId}
	</select>
	
	<select id="getByPlanId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from
		<include refid="Base_Table" />
		where
		a.plan_id = #{planId}
	</select>

	<insert id="insert" parameterType="com.togest.domain.PlanLine">
		insert into 6c_plan_line(
		id, line_id, direction, start_km, end_km, start_station, end_station, detect_mileage,
		plan_id, del_flag, create_ip, create_by, create_date
		)
		values(
		#{id}, #{lineId}, #{direction}, #{startKm}, #{endKm}, #{startStation}, #{endStation}, #{detectMileage},
		#{planId}, #{delFlag}, #{createIp}, #{createBy}, #{createDate}
		)
	</insert>

	<update id="update" parameterType="com.togest.domain.PlanLine">
		update 6c_plan_line
		<trim prefix="set" suffixOverrides=",">
			<if test="lineId != null">
				line_id = #{lineId},
			</if>
			<if test="direction != null">
				direction = #{direction},
			</if>
			<if test="startKm != null">
				start_km = #{startKm},
			</if>
			<if test="endKm != null">
				end_km = #{endKm}, 
			</if>
			<if test="startStation != null">
				start_station = #{startStation}, 
			</if>
			<if test="endStation != null">
				end_station = #{endStation}, 
			</if>
			<if test="detectMileage != null">
				detect_mileage = #{detectMileage}
			</if>
			<if test="updateIp != null">
				update_ip = #{updateIp},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate},
			</if>
		</trim>
		where
		id = #{id}
	</update>
	
	<update id="deleteFalsesByLineId" parameterType="java.util.Map">
		update 6c_plan_line set
		del_flag=1, delete_ip = #{deleteIp}, delete_by=#{deleteBy}, delete_date=#{deleteDate}
		where plan_id
		in
		<foreach item="item" collection="ids" separator="," open="("
			close=")" index="">
			#{item}
		</foreach>
	</update>
	
	<update id="deleteFalses" parameterType="java.util.Map">
		update 6c_plan_line set
		del_flag=1, delete_ip = #{deleteIp}, delete_by=#{deleteBy}, delete_date=#{deleteDate}
		where id
		in
		<foreach item="item" collection="ids" separator="," open="("
			close=")" index="">
			#{item}
		</foreach>
	</update>
	
	<resultMap id="DTOResultMap" type="com.togest.domain.PlanLineDTO">
		<id column="id" property="id" />
		<result column="line_id" property="lineId" />
		<result column="direction" property="direction" />
		<result column="start_km" property="startKm" />
		<result column="end_km" property="endKm" />
		<result column="start_station" property="startStation" />
		<result column="end_station" property="endStation" />
		<result column="detect_mileage" property="detectMileage" />
		<result column="plan_id" property="planId" />
		<result column="lineName" property="lineName" />
		<result column="startStationName" property="startStationName" />
		<result column="endStationName" property="endStationName" />
	</resultMap>
	
	<sql id="DTO_Column_List">
		a.id, a.line_id, a.direction, a.start_km, a.end_km, a.start_station, a.end_station, 
		a.detect_mileage, a.plan_id, 
		line.name as lineName,
		psa1.name as startStationName, psa2.name as endStationName
	</sql>
	
	<sql id="DTO_Table">
		6c_plan_line a
		left join 6c_plan p on a.plan_id = p.id
		left join p_line line on a.line_id = line.id
		left join p_supply_arm psa1 on psa1.id = a.start_station
		left join p_supply_arm psa2 on psa2.id = a.end_station
	</sql>
	
	<select id="getPlanLineDTOByPlanId" resultMap="DTOResultMap" parameterType="java.lang.String">
		select
		<include refid="DTO_Column_List" />
		from
		<include refid="DTO_Table" />
		where a.plan_id=#{planId} and p.del_flag=0 and a.del_flag = 0
	</select>
	<select id="getIdsByPlanIds" resultType="java.lang.String" parameterType="java.util.List">
		select id from
		6c_plan_line
		where del_flag = 0 and 
		plan_id in 
		<foreach item="item" collection="planIds" separator="," open="("
			close=")" index="">
			#{item}
		</foreach>
	</select>
	
	<select id="findPlanLineDTOList" resultMap="DTOResultMap" parameterType="com.togest.request.PlanQueryFilter">
		select
		<include refid="DTO_Column_List" />
		from
		<include refid="DTO_Table" />
		<where>
			<if test="beginCheckDate != null">
				and p.plan_date &gt;= #{beginCheckDate}
			</if>
			<if test="endCheckDate != null">
				and p.plan_date &lt;= #{endCheckDate}
			</if>
			<if test="lineId != null">
				and a.line_id = #{lineId}
			</if>
			<if test="direction != null">
				and a.direction = #{direction}
			</if>
			<if test="deptId != null">
				and p.dept_id = #{deptId}
			</if>
			<if test="planStatus != null">
				and p.plan_status = #{planStatus}
			</if>
			<if test="systemId != null">
				and p.system_id = #{systemId}
			</if>
			and p.del_flag=0
			and a.del_flag=0
		</where>
	</select>
	
	<insert id="insertPlanLineDept" parameterType="java.util.Map">
		insert into 6c_plan_line_dept(plan_line_id,dept_id)
		values(#{planLineId},#{deptId})
	</insert>

	<delete id="deletePlanLineDept">
		delete from 6c_plan_line_dept
		<where>
			<if test="planLineId!=null">
				plan_line_id = #{planLineId}
			</if>
			<if test="deptId!=null">
				and dept_id = #{deptId}
			</if>
			<if test="planLineId==null and deptId==null">
				and 1=0
			</if>
		</where>
	</delete>
	
	<select id="getPlanLineDeptList" parameterType="java.util.Map" resultType="java.util.Map">
	select plan_line_id as planId,dept_id as deptId from 6c_plan_line_dept
		<where>
			<if test="planLineId!=null">
				plan_line_id = #{planLineId}
			</if>
			<if test="deptId!=null">
				and dept_id = #{deptId}
			</if>
			<if test="planLineId==null and deptId==null">
				and 1=0
			</if>
		</where>
	
	</select>
</mapper>