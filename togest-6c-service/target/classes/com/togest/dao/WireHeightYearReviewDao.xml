<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.togest.dao.WireHeightYearReviewDao">

    <resultMap type="com.togest.domain.WireHeightYearReviewDTO" id="wireHeightYearReviewMap">
		<result property="id" column="id"/>
		<result property="workAreaId" column="work_area_id"/>
		<result property="lineId" column="line_id"/>
		<result property="direction" column="direction"/>
		<result property="psaId" column="psa_id"/>
		<result property="tunnelId" column="tunnel_id"/>
		<result property="pillarId" column="pillar_id"/>
		<result property="glb" column="glb"/>
		<result property="year" column="year"/>
		<result property="yearReviewRailHeightValue" column="year_review_rail_height_value"/>
		<result property="sort" column="sort"/>
		
		<result property="pillarNum" column="pillarNum"/>
		<result property="pillarName" column="pillarName"/>
		<result property="tunnelName" column="tunnelName"/>
    </resultMap>
    
    <sql id="baseColumns">
    	whyr.id,
    	whyr.year,
    	whyr.pillar_id,
    	whyr.year_review_rail_height_value,
    	jepi.dept_id work_area_id,
    	jepi.pl_id line_id,
    	jepi.direction direction,
    	jepi.psa_id psa_id,
    	jepi.start_km glb,
    	jepi.num pillarNum,
    	jepi.name pillarName,
    	jepi.tunnel_id tunnel_id,
    	tunnel.name tunnelName
    </sql>
    
    <sql id="Base_Table">
		6c_wire_height_year_review whyr
		left join jcw_equ_pillar_info jepi on whyr.pillar_id = jepi.id
		left join p_tunnel tunnel on jepi.tunnel_id = tunnel.id
	</sql>
	
    <sql id="baseConditions">
		<if test="workAreaId !=null and workAreaId !=''">
			<if test="isChild==true">
				and jepi.dept_id in 
				(select id from p_department where parent_ids like '%${workAreaId}%' or id = #{workAreaId})
			</if>
			<if test="isChild==false">
				and jepi.dept_id=#{workAreaId}
			</if>
		</if>
		<if test="sectionId != null">
			and 
				(	jepi.dept_id in
					(select id from p_department where parent_ids like '%${sectionId}%') or jepi.dept_id=#{sectionId}
				)
		</if>
		<if test="lineId != null"> 
			and jepi.pl_id = #{lineId}
		</if>
		<if test="direction != null"> 
			and jepi.direction = #{direction}
		</if>
		<if test="psaId != null"> 
			and jepi.psa_id = #{psaId}
		</if>
		<if test="tunnelId != null"> 
			and jepi.tunnel_id = #{tunnelId}
		</if>
		<if test="pillarId != null"> 
			and whyr.pillar_id = #{pillarId}
		</if>
		<if test="pillarName != null"> 
			and jepi.name = #{pillarName}
		</if>
		<if test="glb != null"> 
			and jepi.start_km = #{glb}
		</if>
		<if test="year != null"> 
			and whyr.year = #{year}
		</if>
		<if test="yearReviewRailHeightValue != null"> 
			and whyr.year_review_rail_height_value = #{yearReviewRailHeightValue}
		</if>
		<if test="delFlag != null"> 
			and whyr.del_flag = #{delFlag}
		</if>
    </sql>

	<select id="getByKey" parameterType="java.lang.String" resultMap="wireHeightYearReviewMap">
		select <include refid="baseColumns"></include>
		from <include refid="Base_Table"></include>
		where whyr.id = #{id}
	</select>
	
	<select id="getListByKeys" parameterType="java.util.List" resultMap="wireHeightYearReviewMap">
		select <include refid="baseColumns"></include>
		from <include refid="Base_Table"></include>
		where whyr.id in
		<foreach item="item" collection="ids" separator="," open="("
					close=")" index="">
					#{item}
		</foreach>
	</select>
	
	<select id="getByEntity" parameterType="com.togest.domain.WireHeightYearReviewDTO" resultMap="wireHeightYearReviewMap">
		select <include refid="baseColumns"></include>
		from <include refid="Base_Table"></include>
		<where>
			<include refid="baseConditions"></include>
		</where>
	</select>

	<select id="findList" parameterType="com.togest.domain.WireHeightYearReviewDTO" resultMap="wireHeightYearReviewMap">
		select <include refid="baseColumns"></include>
		from <include refid="Base_Table"></include>
		<where>
			<include refid="baseConditions"></include>
			<choose>
            <when test="orderBy!=null and orderBy!=''">
                order by whyr.${orderBy}
            </when>
			<otherwise>
                order by whyr.year desc, jepi.pl_id asc, jepi.start_km asc,
                jepi.dept_id asc, jepi.psa_id asc, jepi.tunnel_id asc, jepi.num asc
			</otherwise>
        </choose>
		</where>
	</select>
	<select id="findAllList" parameterType="com.togest.domain.WireHeightYearReviewDTO" resultMap="wireHeightYearReviewMap">
		select <include refid="baseColumns"></include>
		from <include refid="Base_Table"></include>
		<where>
			whyr.del_flag = 0
		</where>
	</select>
	
	<select id="checkRepeat" parameterType="com.togest.domain.WireHeightYearReviewDTO" resultMap="wireHeightYearReviewMap">
		select <include refid="baseColumns"></include>
		from <include refid="Base_Table"></include>
		<where>
			whyr.del_flag = 0
			<choose>
				<when test="entity.year != null"> 
					and whyr.year = #{entity.year}
				</when>
				<otherwise>
					and whyr.check_date is null
				</otherwise>
			</choose>
			<choose>
				<when test="entity.pillarId != null"> 
					and whyr.pillar_id = #{entity.pillarId}
				</when>
				<otherwise>
					and whyr.pillar_id is null
				</otherwise>
			</choose>
		</where>
	</select>
	 
	<insert id="insert" parameterType="com.togest.domain.WireHeightYearReviewDTO">
		insert into 6c_wire_height_year_review
		<trim prefix="(" suffix=")" suffixOverrides="," >
            id,
            work_area_id,
            line_id,
            direction,
            psa_id,
            tunnel_id,
            pillar_id,
            glb,
            year,
            year_review_rail_height_value,
            del_flag,
            create_ip,
            create_by,
            create_date,
			<if test="sort!=null">sort</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			#{id},
			#{workAreaId},
			#{lineId},
			#{direction},
			#{psaId},
			#{tunnelId},
			#{pillarId},
			#{glb},
			#{year},
			#{yearReviewRailHeightValue},
			#{delFlag},
			#{createIp},
			#{createBy},
			#{createDate},
			<if test="sort!=null">#{sort}</if>
		</trim>
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List">
		insert into 6c_wire_height_year_review
		(
			id,
            work_area_id,
            line_id,
            direction,
            psa_id,
            tunnel_id,
            pillar_id,
            glb,
            year,
            year_review_rail_height_value,
            del_flag,
            create_ip,
            create_by,
            create_date
		)
		values
		<foreach collection="list" item="item" index="index" separator=","> 
		(
			#{item.id},
			#{item.workAreaId},
			#{item.lineId},
			#{item.direction},
			#{item.psaId},
			#{item.tunnelId},
			#{item.pillarId},
			#{item.glb},
			#{item.year},
			#{item.yearReviewRailHeightValue},
			#{item.delFlag},
			#{item.createIp},
			#{item.createBy},
			#{item.createDate}
		)
    	</foreach> 
	</insert>
	 
	<update id="update" parameterType="com.togest.domain.WireHeightYearReviewDTO">
		update 6c_wire_height_year_review 
		<set >
		work_area_id = #{workAreaId},
		line_id = #{lineId},
		direction = #{direction},
		psa_id = #{psaId},
		tunnel_id = #{tunnelId},
		pillar_id = #{pillarId},
		glb = #{glb},
		year = #{year},
		year_review_rail_height_value = #{yearReviewRailHeightValue},
		update_ip = #{updateIp},
		update_by = #{updateBy},
		update_date = #{updateDate},
		<if test="sort!=null">sort = #{sort}</if>
		</set >
		where id = #{id}
	</update>
	
	
	<delete id="deleteByKey">
		delete from 6c_wire_height_year_review where id in 
		<foreach item="item" collection="id.split(',')" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<update id="delete" parameterType="com.togest.domain.WireHeightYearReviewDTO">
		update 6c_wire_height_year_review
		set del_flag=#{delFlag},delete_by=#{deleteBy},delete_date=#{deleteDate},delete_ip=#{deleteIp}
		where 
		id in 
		<foreach item="item" collection="id.split(',')" separator="," open="("
					close=")">
					#{item}
		</foreach>

	</update>

</mapper>